



Network Working Group                                           A. Vesco
Internet-Draft                                               L. Perugini
Intended status: Informational                          LINKS Foundation
Expires: 12 May 2024                                           N. Tuveri
                                                      Tampere University
                                                         9 November 2023


                           TODO - Your title
                      draft-vesco-vcauthtls-latest

Abstract

   This document defines a new certificate type and a new extension to
   exchange Verifiable Credentials (VCs) in Transport Layer Security
   (TLS).  The new certificate type allows VC to be used for
   authentication purpose.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://Cybersecurity-LINKS.github.io/draft-vesco-perugini-tls-ssi/
   draft-vesco-perugini-tuveri-tls-ssi.html.  Status information for
   this document may be found at https://datatracker.ietf.org/doc/draft-
   vesco-vcauthtls/.

   Source for this draft and an issue tracker can be found at
   https://github.com/Cybersecurity-LINKS/draft-vesco-perugini-tls-ssi.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 12 May 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  VC Certificate type
   4.  Structure of the FOOBAR Extensions
     4.1.  ssi_parameters
     4.2.  foobar1
     4.3.  foobar2
   5.  Possibly the new Messages
   6.  TLS Client and Server Handshake Behavior
     6.1.  ClientHello
     6.2.  CertificateRequest
     6.3.  Certificate
     6.4.  CertificateVerify
   7.  An alternative Design / Design Consideration
   8.  Examples
     8.1.  TLS Server Uses a VP
     8.2.  TLS Client and Server Use VPs
     8.3.  TLS Client Uses VP and Server Uses Certificate
     8.4.  TLS Client Uses Certificate and Server Uses VP
     8.5.  Fallback to Traditional Handshake
     8.6.  Empty intersection of Client and Server DID Methods
     8.7.  TLS Server Enforces SSI Server Authentication
   9.  Security Considerations
   10. IANA Considerations
   11. Normative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   W3C defined VC

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  VC Certificate type

   opaque ASN.1Cert<1..2^24-1>;

   struct {
      select(certificate_type){
         // RawPublicKey certificate type defined in RFC 7250
         case RawPublicKey:
            opaque ASN.1_subjectPublicKeyInfo<1..2^24-1>;

         // X.509 certificate defined in RFC 5246
         case X.509:
            ASN.1Cert certificate_list<0..2^24-1>;

         // The new certificate type definied in this document
         case VC:
            opaque ASN.1_subjectPublicKeyInfo<1..2^24-1>;

         // Additional certificate type based on
         // "TLS Certificate Types" subregistry
      };
   } Certificate;

   TLS Certificate types (IANA)

   +=======+=======================+=============+===========+=========+
   | value | name                  | recommended | Reference | comment |
   +=======+=======================+=============+===========+=========+
   | 4     | Verifiable            |             | This      |         |
   |       | Credential            |             | document  |         |
   +-------+-----------------------+-------------+-----------+---------+

                                  Table 1

4.  Structure of the FOOBAR Extensions

4.1.  ssi_parameters

4.2.  foobar1

4.3.  foobar2

5.  Possibly the new Messages

6.  TLS Client and Server Handshake Behavior

6.1.  ClientHello

6.2.  CertificateRequest

6.3.  Certificate

6.4.  CertificateVerify

7.  An alternative Design / Design Consideration

8.  Examples

8.1.  TLS Server Uses a VP

8.2.  TLS Client and Server Use VPs

8.3.  TLS Client Uses VP and Server Uses Certificate

8.4.  TLS Client Uses Certificate and Server Uses VP

   it happens when the server does not send ssi_paramters extension in
   certificate request or it does but the client does not have a DID in
   the list of supported DLT (i.e.  DID Methods) by the server

8.5.  Fallback to Traditional Handshake

   server ignores ssi_parameters extension in the clientHello

8.6.  Empty intersection of Client and Server DID Methods

   HelloRetryRequest + foobar extension server replies with the list of
   its DID Methods, this implies that the server has a DID stored in
   each of the DLT of the listed DID Methods.

8.7.  TLS Server Enforces SSI Server Authentication

   server enforces SSI client authentication (no fall back bu enforce
   SSI to the client)

   HelloRetryRequest

9.  Security Considerations

   TODO Security

10.  IANA Considerations

   This document has no IANA actions.

11.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Andrea Vesco
   LINKS Foundation
   Email: andrea.vesco@linksfoundation.com


   Leonardo Perugini
   LINKS Foundation
   Email: leonardo.perugini@linksfoundation.com


   Nicola Tuveri
   Tampere University
   Email: nic.tuv@gmail.com
